!function(r,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof module&&module.exports?module.exports=e():(r.TypeCheck=r.TypeCheck||{},r.TypeCheck=e())}(this,function(){var r,e;return function(n){function i(r){for(var e=0,n=[];e<r.length;e++){var i=s.resolved[r[e]];i&&n.push(i)}return n}function t(){for(var r in s.unresolved){var e=s.unresolved[r],n=i(e.dependencies);o(r,e.factory,e.dependencies,n,!1)}}function o(r,e,n,i,t){i.length===n.length?s.resolved[r]=e.apply(e,i):t&&(s.unresolved[r]={dependencies:n,factory:e})}var s={resolved:{},unresolved:{}};e=function(r,e,n){return s.resolved[r]?void console.warn("There is already a module with id <"+r+"> defined. Therefore this module will be ignored"):"string"==typeof r&&Array.isArray(e)&&"function"==typeof n?(0===e.length?o(r,n,e,[],!1):o(r,n,e,i(e),!0),void t()):void console.warn("Passed arguments for module are invalid")},e.amd={},r=function(r,e){r=Array.isArray(r)?r:[r];var n=i(r);if(1===n.length&&!e)return n[0];if(n.length!==r.length||!e)throw new Error("Not all modules are resolved");e.apply(e,n)}}(),e("node_modules/jean-amd/dist/jean-amd",function(){}),e("src/TypeCheck",[],function(){return{isString:function(r){return"string"==typeof r},isBoolean:function(r){return"boolean"==typeof r},isNumber:function(r){return"number"==typeof r},isObject:function(r){var e=!1;if(this.isString(r)||this.isFunction(r))return!1;if(this.isEmptyObject(r))return!0;for(var n in r)if(r.hasOwnProperty(n)){e=!0;break}return e},isEmptyObject:function(r){var e=!0;if(!this.isDefined(r)||this.isBoolean(r)||this.isFunction(r)||this.isNumber(r)||this.isString(r)||Array.isArray(r))return!1;for(var n in r)if(r.hasOwnProperty(n)){e=!1;break}return e},isFunction:function(r){return"function"==typeof r},isDefined:function(r){return void 0!==r&&null!=r},isArray:function(r){return Array.isArray(r)},isArrayTypeOf:function(r,e){var n=!0;if(!this.isString(e))throw new TypeError("options.type is not a string");if(!Array.isArray(r))throw new TypeError("options.array is not an array");0===r.length&&(n=!1);for(var i=0,t=r.length;i<t;i++){if(typeof r[i]!==e){n=!1;break}}return n},isInstanceOf:function(r,e){if(!this.isObject(r))throw new TypeError("child is not an object");if(!this.isFunction(e))throw new TypeError("parent is not a function");return r instanceof e},isEnumValue:function(r,e){if(!this.isString(r)&&!this.isNumber(r))throw new TypeError("value must be a String or a Number");if(!this.isObject(e))throw new TypeError("o is not an object");var n,i=Object.keys(e),t=i.length,o=!1;for(n=0;n<t;n++)if(e[i[n]]===r){o=!0;break}return o}}}),r("src/TypeCheck")});